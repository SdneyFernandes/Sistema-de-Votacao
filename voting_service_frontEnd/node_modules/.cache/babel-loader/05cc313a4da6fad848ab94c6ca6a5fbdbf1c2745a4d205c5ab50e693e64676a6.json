{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsidn\\\\Downloads\\\\voting_service_frontEnd\\\\src\\\\pages\\\\Register\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { userApi } from '../../services/api';\nimport { AuthContainer, AuthForm, AuthInput, AuthButton, SwitchAuth } from '../../styles/AuthStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      await userApi.post('/api/users/register', {\n        username,\n        email,\n        password\n      });\n      alert('Registro feito com sucesso!');\n      navigate('/');\n    } catch (error) {\n      alert('Erro ao registrar!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContainer, {\n    children: /*#__PURE__*/_jsxDEV(AuthForm, {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        type: \"text\",\n        placeholder: \"Nome\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n        type: \"submit\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchAuth, {\n        children: [\"J\\xE1 tem uma conta? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => navigate('/'),\n          children: \"Fa\\xE7a login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"ZkOxnrY36RMsFBgUMFQtj1C80OU=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","userApi","AuthContainer","AuthForm","AuthInput","AuthButton","SwitchAuth","jsxDEV","_jsxDEV","Register","_s","navigate","username","setUsername","email","setEmail","password","setPassword","handleRegister","e","preventDefault","post","alert","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/fsidn/Downloads/voting_service_frontEnd/src/pages/Register/index.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { userApi } from '../../services/api'\nimport {\n  AuthContainer,\n  AuthForm,\n  AuthInput,\n  AuthButton,\n  SwitchAuth\n} from '../../styles/AuthStyles'\n\nconst Register = () => {\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault()\n    try {\n      await userApi.post('/api/users/register', { username, email, password })\n      alert('Registro feito com sucesso!')\n      navigate('/')\n    } catch (error) {\n      alert('Erro ao registrar!')\n    }\n  }\n\n  return (\n    <AuthContainer>\n      <AuthForm onSubmit={handleRegister}>\n        <h2>Cadastro</h2>\n        <AuthInput\n          type=\"text\"\n          placeholder=\"Nome\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n        <AuthInput\n          type=\"email\"\n          placeholder=\"E-mail\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n        <AuthInput\n          type=\"password\"\n          placeholder=\"Senha\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n        <AuthButton type=\"submit\">Registrar</AuthButton>\n        <SwitchAuth>\n          Já tem uma conta? <a onClick={() => navigate('/')}>Faça login</a>\n        </SwitchAuth>\n      </AuthForm>\n    </AuthContainer>\n  )\n}\n\nexport default Register\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}