{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsidn\\\\Documents\\\\workspace-spring-tool-suite-4-4.23.1.RELEASE\\\\Sistema-de-Votacao\\\\voting_service_frontEnd\\\\src\\\\pages\\\\AdminPanel\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { userApi, voteApi } from '../../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserRole } from '../../utils/auth';\nimport { AdminContainer, Title, SectionTitle, List, ListItem, DeleteButton } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [sessions, setSessions] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (getUserRole() !== 'ADMIN') {\n      alert('Acesso negado!');\n      navigate('/dashboard');\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        const usersResponse = await userApi.get('/api/users');\n        const sessionsResponse = await voteApi.get('/api/votes_session');\n        setUsers(usersResponse.data);\n        setSessions(sessionsResponse.data);\n      } catch (error) {\n        alert('Erro ao carregar dados!');\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  const deleteUser = async id => {\n    try {\n      await userApi.delete(`/api/users/${id}`);\n      setUsers(users.filter(user => user.id !== id));\n    } catch (error) {\n      alert('Erro ao deletar usuário!');\n    }\n  };\n  const deleteSession = async id => {\n    try {\n      await voteApi.delete(`/api/votes_session/${id}`);\n      setSessions(sessions.filter(session => session.id !== id));\n    } catch (error) {\n      alert('Erro ao deletar sessão!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Painel de Administra\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Usu\\xE1rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [user.username, \" - \", user.role, /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onClick: () => deleteUser(user.id),\n          children: \"Deletar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionTitle, {\n      children: \"Vota\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: sessions.map(session => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [session.title, /*#__PURE__*/_jsxDEV(DeleteButton, {\n          onClick: () => deleteSession(session.id),\n          children: \"Deletar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, session.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"INBg1ZCC96wdCkN6W8ZgdK1TjKQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["useEffect","useState","userApi","voteApi","useNavigate","getUserRole","AdminContainer","Title","SectionTitle","List","ListItem","DeleteButton","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","sessions","setSessions","navigate","alert","fetchData","usersResponse","get","sessionsResponse","data","error","deleteUser","id","delete","filter","user","deleteSession","session","children","fileName","_jsxFileName","lineNumber","columnNumber","map","username","role","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/fsidn/Documents/workspace-spring-tool-suite-4-4.23.1.RELEASE/Sistema-de-Votacao/voting_service_frontEnd/src/pages/AdminPanel/index.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { userApi, voteApi } from '../../services/api'\nimport { useNavigate } from 'react-router-dom'\nimport { getUserRole } from '../../utils/auth'\nimport {\n  AdminContainer,\n  Title,\n  SectionTitle,\n  List,\n  ListItem,\n  DeleteButton\n} from './styles'\n\ninterface User {\n  id: number\n  username: string\n  role: string\n}\n\ninterface Session {\n  id: number\n  title: string\n}\n\nconst AdminPanel = () => {\n  const [users, setUsers] = useState<User[]>([])\n  const [sessions, setSessions] = useState<Session[]>([])\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (getUserRole() !== 'ADMIN') {\n      alert('Acesso negado!')\n      navigate('/dashboard')\n      return\n    }\n\n    const fetchData = async () => {\n      try {\n        const usersResponse = await userApi.get('/api/users')\n        const sessionsResponse = await voteApi.get('/api/votes_session')\n        setUsers(usersResponse.data)\n        setSessions(sessionsResponse.data)\n      } catch (error) {\n        alert('Erro ao carregar dados!')\n      }\n    }\n    fetchData()\n  }, [navigate])\n\n  const deleteUser = async (id: number) => {\n    try {\n      await userApi.delete(`/api/users/${id}`)\n      setUsers(users.filter((user) => user.id !== id))\n    } catch (error) {\n      alert('Erro ao deletar usuário!')\n    }\n  }\n\n  const deleteSession = async (id: number) => {\n    try {\n      await voteApi.delete(`/api/votes_session/${id}`)\n      setSessions(sessions.filter((session) => session.id !== id))\n    } catch (error) {\n      alert('Erro ao deletar sessão!')\n    }\n  }\n\n  return (\n    <AdminContainer>\n      <Title>Painel de Administração</Title>\n\n      <SectionTitle>Usuários</SectionTitle>\n      <List>\n        {users.map((user) => (\n          <ListItem key={user.id}>\n            {user.username} - {user.role}\n            <DeleteButton onClick={() => deleteUser(user.id)}>\n              Deletar\n            </DeleteButton>\n          </ListItem>\n        ))}\n      </List>\n\n      <SectionTitle>Votações</SectionTitle>\n      <List>\n        {sessions.map((session) => (\n          <ListItem key={session.id}>\n            {session.title}\n            <DeleteButton onClick={() => deleteSession(session.id)}>\n              Deletar\n            </DeleteButton>\n          </ListItem>\n        ))}\n      </List>\n    </AdminContainer>\n  )\n}\n\nexport default AdminPanel\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}