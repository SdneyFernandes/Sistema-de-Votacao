{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsidn\\\\Documents\\\\workspace-spring-tool-suite-4-4.23.1.RELEASE\\\\Sistema-de-Votacao\\\\voting_service_frontEnd\\\\src\\\\pages\\\\Login\\\\index.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable prettier/prettier */\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { userApi } from '../../services/api';\nimport { AuthContainer, AuthForm, AuthInput, AuthButton, SwitchAuth, ErrorMessage, LoadingOverlay } from '../../styles/AuthStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    try {\n      // 1. Faz login e obtém o token\n      const response = await userApi.post('/login', {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      console.log('Resposta do backend:', response);\n      const {\n        token\n      } = response.data;\n      if (!token) throw new Error('Token não recebido');\n\n      // 2. Armazena o token e obtém dados do usuário\n      localStorage.setItem('token', token);\n      const userResponse = await userApi.get('/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      console.log('Usuário logado:', userResponse.data);\n\n      // 3. Armazena role e redireciona\n      const userRole = userResponse.data.role;\n      localStorage.setItem('role', userRole);\n      localStorage.setItem('userId', userResponse.data.id); // Armazena ID do usuário\n\n      // 4. Redireciona conforme a role\n      navigate(userRole === 'ADMIN' ? '/create-vote' : '/dashboard');\n    } catch (error) {\n      console.error('Erro ao fazer login:', error);\n      setError('Credenciais inválidas ou serviço indisponível');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContainer, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(AuthForm, {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        type: \"email\",\n        placeholder: \"E-mail\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        id: \"login-email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        type: \"password\",\n        placeholder: \"Senha\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        id: \"login-password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AuthButton, {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Entrando...' : 'Entrar'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchAuth, {\n        children: [\"N\\xE3o tem uma conta?\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => navigate('/register'),\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Registre-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"KC/oSdul7sDySqHsV4xIjcWkZBo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","userApi","AuthContainer","AuthForm","AuthInput","AuthButton","SwitchAuth","ErrorMessage","LoadingOverlay","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","handleLogin","e","preventDefault","response","post","withCredentials","console","log","token","data","Error","localStorage","setItem","userResponse","get","headers","Authorization","userRole","role","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","name","disabled","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/fsidn/Documents/workspace-spring-tool-suite-4-4.23.1.RELEASE/Sistema-de-Votacao/voting_service_frontEnd/src/pages/Login/index.tsx"],"sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { userApi } from '../../services/api'\r\nimport {\r\n  AuthContainer,\r\n  AuthForm,\r\n  AuthInput,\r\n  AuthButton,\r\n  SwitchAuth,\r\n  ErrorMessage,\r\n  LoadingOverlay\r\n} from '../../styles/AuthStyles'\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleLogin = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    setError('')\r\n\r\n    try {\r\n      // 1. Faz login e obtém o token\r\n      const response = await userApi.post('/login', { email, password }, {\r\n        withCredentials: true\r\n      })\r\n      \r\n      console.log('Resposta do backend:', response)\r\n      \r\n      const { token } = response.data\r\n      if (!token) throw new Error('Token não recebido')\r\n\r\n      // 2. Armazena o token e obtém dados do usuário\r\n      localStorage.setItem('token', token)\r\n      \r\n      const userResponse = await userApi.get('/me', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        withCredentials: true\r\n      })\r\n\r\n      console.log('Usuário logado:', userResponse.data)\r\n      \r\n      // 3. Armazena role e redireciona\r\n      const userRole = userResponse.data.role\r\n      localStorage.setItem('role', userRole)\r\n      localStorage.setItem('userId', userResponse.data.id) // Armazena ID do usuário\r\n\r\n      // 4. Redireciona conforme a role\r\n      navigate(userRole === 'ADMIN' ? '/create-vote' : '/dashboard')\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao fazer login:', error)\r\n      setError('Credenciais inválidas ou serviço indisponível')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContainer>\r\n      {isLoading && <LoadingOverlay>Carregando...</LoadingOverlay>}\r\n      \r\n      <AuthForm onSubmit={handleLogin}>\r\n        <h2>Login</h2>\r\n        \r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        \r\n        <AuthInput\r\n          type=\"email\"\r\n          placeholder=\"E-mail\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n          id=\"login-email\"\r\n          name=\"email\"\r\n        />\r\n        \r\n        <AuthInput\r\n          type=\"password\"\r\n          placeholder=\"Senha\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n          id=\"login-password\"\r\n          name=\"password\"\r\n        />\r\n        \r\n        <AuthButton type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Entrando...' : 'Entrar'}\r\n        </AuthButton>\r\n        \r\n        <SwitchAuth>\r\n          Não tem uma conta?{' '}\r\n          <a onClick={() => navigate('/register')} style={{cursor: 'pointer'}}>\r\n            Registre-se\r\n          </a>\r\n        </SwitchAuth>\r\n      </AuthForm>\r\n    </AuthContainer>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}